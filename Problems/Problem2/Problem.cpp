/* 
 * Project Euler Implementation
 *
 * Author:  Brendan Bates
 * Website: http://www.brendan-bates.com
 * Email:   me@brendan-bates.com
 * License: Apache License, Version 2.0 (See LICENSE file for details)
 *
 */
 
/*********************
 * PROBLEM #2 
 *********************/

/*

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

*/

#include <cstring>
#include <stdio.h>
#include "../AbstractProblem.h"
#include "Problem.h"

FACTORY(Problem2)

Problem2::Problem2()
{
    this->ProblemName = new std::string("Even Fibonacci numbers");
    this->ProblemNumber = 2;
}

void Problem2::GetInputs()
{
    this->ProjectFunctions->GetInput(&this->max, 4000000, "highest term");
}

void Problem2::GetAnswer()
{    
    printf("Result: %u\r\n", this->answer);
}

void Problem2::Execute()
{
    // Initialize the two starting terms as well as the sum.
    uint32_t term1 = 0, term2 = 1, temp = 0, sum = 0;
    
    
    while(temp < this->max) {
        if(!(temp & 0x00000001)) {
            sum += temp;
        }
        
        temp = term1 + term2;
        term1 = term2;
        term2 = temp;
    }
    
    this->answer = sum;
}